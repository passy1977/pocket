
services:
  # MariaDB Database
  pocket-db:
    image: mariadb:latest
    container_name: pocket-db
    networks:
      - pocket-network
    ports:
      - "3306:3306"
    volumes:
      - pocket_db_data:/var/lib/mysql
      - ./docker-volumes/pocket5.sql:/docker-entrypoint-initdb.d/init.sql:ro
    environment:
      # Database configuration
      MARIADB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root_password_change_me}
      MARIADB_DATABASE: pocket5
      MARIADB_USER: ${DB_USERNAME:-pocket_user}
      MARIADB_PASSWORD: ${DB_PASSWORD:-user_password_change_me}
      # Performance tuning
      MYSQL_INNODB_BUFFER_POOL_SIZE: 256M
      MYSQL_INNODB_LOG_FILE_SIZE: 64M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    command: >
      --innodb-buffer-pool-size=256M
      --innodb-log-file-size=64M
      --max-connections=200
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci

  # Pocket Backend Application
  pocket-backend:
    build:
      context: pocket-backend/
      dockerfile: Dockerfile
    image: pocket-backend:5.0.0
    container_name: pocket-backend
    networks:
      - pocket-network
    ports:
      - "${SERVER_PORT:-8081}:8081"
    volumes:
      # Application logs
      - ./docker-volumes/pocket-logs:/var/log/pocket
      # Optional: Custom configuration override
      - ./docker-volumes/pocket5-config.yaml:/var/www/scripts/pocket5-config.yaml:ro
    environment:
      # Spring profiles
      SPRING_PROFILES_ACTIVE: docker,production
      
      # Database configuration
      DB_HOST: pocket-db
      DB_PORT: 3306
      DB_NAME: pocket5
      DB_USERNAME: ${DB_USERNAME:-pocket_user}
      DB_PASSWORD: ${DB_PASSWORD:-user_password_change_me}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME:-pocket_user}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD:-user_password_change_me}
      
      # Security configuration (MUST BE CHANGED IN PRODUCTION)
      AES_CBC_IV: ${AES_CBC_IV:-default_16char_iv}
      ADMIN_USER: ${ADMIN_USER:-admin}
      ADMIN_PASSWD: ${ADMIN_PASSWD:-admin_password_change_me}
      
      # Server configuration
      SERVER_URL: ${SERVER_URL:-http://localhost:8081}
      SERVER_PORT: ${SERVER_PORT:-8081}
      
      # CORS configuration
      CORS_ADDITIONAL_ORIGINS: ${CORS_ADDITIONAL_ORIGINS:-}
      CORS_ENABLE_STRICT: ${CORS_ENABLE_STRICT:-false}
      CORS_HEADER_TOKEN: ${CORS_HEADER_TOKEN:-X-Requested-With}
      
      # Logging configuration
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      
      # JVM configuration
      JAVA_OPTS: >-
        -Xmx${JVM_MAX_MEMORY:-512m}
        -Xms${JVM_MIN_MEMORY:-256m}
        -XX:+UseG1GC
        -XX:MaxGCPauseMillis=200
        -XX:+HeapDumpOnOutOfMemoryError
        -XX:HeapDumpPath=/var/log/pocket/
        -Dfile.encoding=UTF-8
        -Djava.security.egd=file:/dev/./urandom
      
      # Database connection URL (constructed automatically)
      SPRING_DATASOURCE_URL: jdbc:mariadb://pocket-db:3306/pocket5?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&autoReconnect=true&sslMode=DISABLED
      
    restart: unless-stopped
    depends_on:
      pocket-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
    
    # Security settings
    user: "1000:1000"  # Run as non-root user
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    read_only: false
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

  # Pocket Web Backend Application (Rust)
  pocket-web-backend:
    build:
      context: pocket-web-backend/
      dockerfile: Dockerfile
      args:
        POCKET_ENABLE_LOGS: ${POCKET_ENABLE_LOGS:-0}
    image: pocket-web-backend:5.0.0
    container_name: pocket-web-backend
    networks:
      - pocket-network
    ports:
      - "${POCKET_PORT:-8080}:${POCKET_PORT:-8080}"
    volumes:
      # Application logs
      - ./docker-volumes/pocket-web-logs:/var/log/pocket-web
    environment:
      # Web backend configuration
      POCKET_HOST: ${POCKET_HOST:-0.0.0.0}
      POCKET_PORT: ${POCKET_PORT:-8080}
      BACKEND_URL: ${BACKEND_URL:-}
      POCKET_MAX_THREADS: ${POCKET_MAX_THREADS:-2}
      POCKET_SESSION_EXPIRATION: ${POCKET_SESSION_EXPIRATION:-300}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-}

      # Logging configuration
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      
    restart: unless-stopped
    depends_on:
      pocket-backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${POCKET_PORT:-8080}/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    
    # Security settings
    user: "1000:1000"  # Run as non-root user
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    read_only: false
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

# Named volumes for data persistence
volumes:
  pocket_db_data:
    name: pocket-db-data
    driver: local

# Custom network for service communication
networks:
  pocket-network:
    name: pocket-network
    external: true
